import numpy as np

def lu_decomposition(matrix):
    n = len(matrix)
    L = np.zeros((n, n))
    U = np.zeros((n, n))

    for i in range(n):
        L[i][i] = 1
        for j in range(i, n):
            U[i][j] = matrix[i][j] - sum(L[i][k] * U[k][j] for k in range(i))
        for j in range(i+1, n):
            L[j][i] = (matrix[j][i] - sum(L[j][k] * U[k][i] for k in range(i))) / U[i][i]

    return L, U

A = np.array([[2, 3, 1], [4, 7, 7], [6, 18, 22]], dtype=float)
L, U = lu_decomposition(A)

print("Matrix A:")
print(A)
print("Lower Triangular Matrix L:")
print(L)
print("Upper Triangular Matrix U:")
print(U)
